# Bucket Sort:-
#     Bucket sort is a comparison sort algorithm that operates on elements by dividing them into different buckets and then sorting these buckets individually. Each bucket is sorted individually using a separate sorting algorithm or by applying the bucket sort algorithm recursively. Bucket sort is mainly useful when the input is uniformly distributed over a range. For example, consider the following problem: Sort a large set of floating point numbers which are in the range from 0.0 to 1.0 and are uniformly distributed across the range. Bucket sort is the best algorithm for this problem. It divides the range into a number of small buckets and then distributes the input array elements into the buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm. The bucket sort algorithm works as follows:
#     1. Set up an array of initially empty "buckets".
#     2. Scatter: Go over the original array, putting each object in its bucket.
#     3. Sort each non-empty bucket.
#     4. Gather: Visit the buckets in order and put all elements back into the original array.

# step1:- create an array with n elements, where each element represent a bucket.
# step2:- insert the elements into the bucket, from the input array, based on their
# take each element from the input array and multiple it with the number of bucket array with the length of the list. 
# convert the result into the integer which gives us the bucket index.
# Inside the elemnt into the bucket corresponding to calculated index.
# repeat the steps for all the elements in the array. 

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

def bucket_sort(x):
    arr = []
    slot_num = 10
    for i in range(slot_num):
        arr.append([])
    for j in x:
        index_b = int(slot_num * j)
        arr[index_b].append(j)
    for i in range(slot_num):
        arr[i] = insertion_sort(arr[i])
    k = 0
    for i in range(slot_num):
        for j in range(len(arr[i])):
            x[k] = arr[i][j]
            k += 1
    return x    
x = [0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434]
print("Sorted Array is")
print(bucket_sort(x))
        
        
  
               
